<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                      "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>

<book id="index" xmlns:xi="http://www.w3.org/2003/XInclude">
    <bookinfo>
        <title>Hinawa Reference Manual</title>
    <releaseinfo>This document is for the Hinawa library, version &version;.
    </releaseinfo>
    </bookinfo>

    <chapter id="introduction">
        <title>Introduction</title>
        <para>This library gives some objects for abstraction to operate system
        resources in two Linux subsystems; FireWire subsystem and Sound subsystem.
        </para>
        <para>This library mainly supports operations for asynchronous
        communication to nodes on IEEE 1394 bus. Additionally, this library
        supports some model-specific operations for Audio and Music units
        on IEEE 1394 bus, supported by drivers in ALSA firewire stack.</para>
        <link linkend="Overview">
            <inlinegraphic fileref="overview.png" format="PNG"></inlinegraphic>
        </link>
        <para>This library expects userspace applications to use GMainContext
        to run event dispatcher with GSource from HinawaFwNode and
        HinawaSndUnit. Additionally this library launches a thread for event
        notifier which emits GObject signal and execute any handler on this
        thread so that the handler can wait for events from the dispatcher.
        </para>
        <para>libhinawa supports gobject introspection, thus this library
        is available with gobject introspection bindings of each language
        such as Python, Ruby and so on. When using this mechanism, please
        refer to documents in each language implementation.</para>
        <para>hinawa-utils is a set of Python 3 modules and scripts utilizing
        libhinawa. It's for control audio and music units on IEEE 1394 bus
        supported by Linux sound subsystem. It's hosted in github.com.</para>
    </chapter>

    <chapter id="hinawa-enumerations">
        <title>Hinawa enumerations</title>
        <xi:include href="xml/hinawa_enum_types.xml"/>
    </chapter>

    <chapter id="hinawa-error">
        <title>Hinawa errors</title>
        <xi:include href="xml/hinawa_error.xml"/>
    </chapter>

    <chapter id="hinawa-fw">
        <title>Hinawa objects for Linux FireWire subsystem.</title>
        <para>This library gives 5 objects for abstractions of some
            features in Linux firewire stack.</para>
        <xi:include href="xml/fw_node.xml"/>
        <xi:include href="xml/fw_resp.xml"/>
        <xi:include href="xml/fw_req.xml"/>
        <xi:include href="xml/fw_fcp.xml"/>
    </chapter>

    <chapter id="hinawa-snd">
        <title>Hinawa objects for Linux sound subsystem.</title>
        <para>This library gives 6 objects for abstractions of some
            features in Linux sound subsystem. Most of the features are
            given by corresponding kernel driver.</para>
        <xi:include href="xml/snd_unit.xml"/>
        <xi:include href="xml/snd_dice.xml"/>
        <xi:include href="xml/snd_efw.xml"/>
        <xi:include href="xml/snd_dg00x.xml"/>
        <xi:include href="xml/snd_motu.xml"/>
        <xi:include href="xml/snd_tscm.xml"/>
    </chapter>

    <index id="index-all">
        <title>Index of all symbols</title>
        <xi:include href="xml/api-index-full.xml"><xi:fallback /></xi:include>
    </index>

    <xi:include href="xml/annotation-glossary.xml"><xi:fallback /></xi:include>

</book>
